// <auto-generated />
using System;
using CinemaTicketSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaTicketSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CinemaTicketSystem.Models.Cinema", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinemaId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.Property<int>("SeatsPerRow")
                        .HasColumnType("int");

                    b.HasKey("CinemaId");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            CinemaId = 1,
                            Name = "Cinema 1",
                            Rows = 10,
                            SeatsPerRow = 15
                        },
                        new
                        {
                            CinemaId = 2,
                            Name = "Cinema 2",
                            Rows = 8,
                            SeatsPerRow = 12
                        },
                        new
                        {
                            CinemaId = 3,
                            Name = "Cinema 3",
                            Rows = 12,
                            SeatsPerRow = 20
                        });
                });

            modelBuilder.Entity("CinemaTicketSystem.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("UserId");

                    b.HasIndex("ScreeningId", "Row", "SeatNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Unique_Seat_Per_Screening");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("CinemaTicketSystem.Models.Screening", b =>
                {
                    b.Property<int>("ScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreeningId"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("FilmTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ScreeningDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ScreeningId");

                    b.HasIndex("CinemaId");

                    b.ToTable("Screenings");
                });

            modelBuilder.Entity("CinemaTicketSystem.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            IsAdmin = true,
                            Name = "Admin",
                            Password = "admin123",
                            PhoneNumber = "+48123456789",
                            Surname = "User"
                        });
                });

            modelBuilder.Entity("CinemaTicketSystem.Models.Reservation", b =>
                {
                    b.HasOne("CinemaTicketSystem.Models.Screening", "Screening")
                        .WithMany("Reservations")
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaTicketSystem.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CinemaTicketSystem.Models.Screening", b =>
                {
                    b.HasOne("CinemaTicketSystem.Models.Cinema", "Cinema")
                        .WithMany("Screenings")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("CinemaTicketSystem.Models.Cinema", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("CinemaTicketSystem.Models.Screening", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CinemaTicketSystem.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
